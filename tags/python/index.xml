<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on Brad Thornborrow</title><link>/tags/python/</link><description>Recent content in python on Brad Thornborrow</description><generator>Hugo -- gohugo.io</generator><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Tue, 17 Jul 2018 00:00:00 +0000</lastBuildDate><atom:link href="/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Build a Twitter Message of the Day (MOTD) Bot</title><link>/posts/2018/07/build-a-twitter-message-of-the-day-motd-bot/</link><pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate><guid>/posts/2018/07/build-a-twitter-message-of-the-day-motd-bot/</guid><description>I was first introduced to the concept of the message of the day (MOTD) while working as a SunOS system administrator back in my university days. At our school, the systems used the Unix fortune command to display random messages and quotes on login. Being a bit nostalgic about these early days of the personal computer era, I decided to build a Message of the Day bot for Twitter. This would give me the pleasure of seeing my own custom messages of the day in my feed, and help me learn the ins and outs of the Twitter API.</description></item><item><title>Script for Exporting Micro.blog posts to Jekyll</title><link>/posts/2018/05/script-for-exporting-micro.blog-posts-to-jekyll/</link><pubDate>Wed, 23 May 2018 00:00:00 +0000</pubDate><guid>/posts/2018/05/script-for-exporting-micro.blog-posts-to-jekyll/</guid><description>As I&amp;rsquo;ve mentioned in previous posts, I&amp;rsquo;m a fan of Jekyll for building static websites, but I have also been experimenting with Micro.blog for my personal site. There was a recent discussion on Micro.blog looking for options to mirror posts from Micro.blog to Jekyll. This question stuck with me, and as I already have a Raspberry Pi server in production for handling other daily maintenance tasks, I decided to investigate if this could be done in Python, building on my previous experience.</description></item></channel></rss>